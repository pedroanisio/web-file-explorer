FROM python:3.12-slim AS builder

WORKDIR /build

# Install build dependencies
RUN apt-get update && apt-get install -y \
    nodejs \
    npm \
    git \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy package files for npm
COPY package*.json ./
RUN npm install

# Copy Tailwind config
COPY tailwind.config.js ./

# Copy Python requirements
COPY setup.py pyproject.toml README.md ./

# Copy plugin requirements
COPY src/plugins/requirements.txt /build/src/plugins/requirements.txt

# Install Python dependencies
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r /build/src/plugins/requirements.txt && \
    pip install --no-cache-dir wheel setuptools

# Copy source code
COPY src ./src/

# Build Tailwind CSS
RUN npx tailwindcss -i ./src/static/css/tailwind-styles.css -o ./src/static/css/tailwind.css --minify

# Build the Python wheel
RUN pip wheel --no-cache-dir -w /wheels .


# Final stage
FROM python:3.12-slim

WORKDIR /app

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    tree \
    cloc \
    curl \
    libmagic1 \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user
RUN addgroup --gid 1000 nonroot && \
    adduser --uid 1000 --gid 1000 --disabled-password --gecos "" nonroot

# Copy wheels and install
COPY --from=builder /wheels /wheels
RUN pip install --no-cache-dir /wheels/* && \
    rm -rf /wheels

# Copy the compiled static assets
COPY --from=builder /build/src/static/css/tailwind.css /app/src/static/css/

# Create necessary directories with correct permissions
RUN mkdir -p /data /app/src/plugins /app/src/templates /app/src/static && \
    chown -R nonroot:nonroot /app /data && \
    chmod -R 755 /app /data

# Set environment variables
ENV FLASK_APP=src
ENV FLASK_FILE_EXPLORER_BASE_DIR=/data
ENV FLASK_RUN_HOST=0.0.0.0
ENV FLASK_RUN_PORT=5000
ENV PYTHONUNBUFFERED=1
ENV FLASK_DEBUG=0

# Expose port
EXPOSE 5000

# Switch to non-root user
USER nonroot

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Run the application
CMD ["python", "-m", "src"] 